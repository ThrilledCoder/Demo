@page "/users"
@using Demo.Application.Users
@using Demo.Core.Models
@using MediatR
@using Microsoft.AspNetCore.Authorization

@rendermode InteractiveServer
@attribute [OutputCache(Duration = 5)]
@attribute [Authorize]

@inject UsersApiClient UsersApi
@inject ISender sender

<PageTitle>User</PageTitle>

<h1>Users</h1>
<FluentButton OnClick="@AddUser">Add John Doe</FluentButton>


@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentDataGrid Id="usergrid" Items="@users" GridTemplateColumns="1fr 1fr 1fr 2fr" TGridItem="User">
        <PropertyColumn Title="E-Mail" Property="@(c => c!.Email)" Sortable="true" Align="Align.Start" />
        <PropertyColumn Title="Firstname" Property="@(c => c!.FirstName)" Sortable="true" Align="Align.Center" />
        <PropertyColumn Title="Lastname" Property="@(c => c!.LastName)" Sortable="true" Align="Align.Center" />
        <PropertyColumn Title="Age" Property="@(c => c!.Age)" Sortable="true" Align="Align.End" />
    </FluentDataGrid>
}

@code {
    private IQueryable<User>? users;

    protected override async Task OnInitializedAsync()
    {
        users = await UsersApi.GetUsersAsync();
    }

    private async Task AddUser()
    {
        var userRequest = new CreateUserRequest("John", "Doe");
        var response = await sender.Send(userRequest);
        users = users?.Append(response);
    }
}
